"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

try:
    from conf import settings

except ImportError:
    settings = None

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = getattr(settings, "SECRET_KEY", 'django-insecure-swy9rjousdzlsm_l&s)4(wmwz37tuuw!$+#gl8z%gsowjlcjbi')

NOTIFICATION_KEY = getattr(
    settings, "NOTIFICATION_KEY",
    ''
)

ORDER_KILL_INTERVAL_MINUTES = getattr(settings, "ORDER_KILL_INTERVAL_MINUTES", 3)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getattr(settings, "DEBUG", True)

ALLOWED_HOSTS = getattr(settings, "ALLOWED_HOSTS", [])
INTERNAL_IPS = getattr(settings, "INTERNAL_IPS", ["127.0.0.1"])
CSRF_TRUSTED_ORIGINS = getattr(settings, "CSRF_TRUSTED_ORIGINS", ["http://*.127.0.0.1"])

# SECURITY CERTIFICATE
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", getattr(settings, "PROTOCOL", "http"))
SECURE_SSL_REDIRECT = getattr(settings, "SECURE_SSL_REDIRECT", False)
SESSION_COOKIE_SECURE = getattr(settings, "SESSION_COOKIE_SECURE", False)
CSRF_COOKIE_SECURE = getattr(settings, "CSRF_COOKIE_SECURE", False)

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": getattr(settings, "DB_NAME", "poliz_db"),
        "USER": getattr(settings, "DB_USER", "postgres"),
        "PASSWORD": getattr(settings, "DB_PASSWORD", "postgres"),
        "HOST": getattr(settings, "DB_HOST", "127.0.0.1"),
        "PORT": getattr(settings, "DB_PORT", "5432")
    }
}
REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
        'django_filters.rest_framework.DjangoFilterBackend',
    ),

    'DEFAULT_PAGINATION_CLASS': 'api.views.CustomPagination',
    'PAGE_SIZE': 30,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'core.authentication.DevAuthentication',
        'rest_framework.authentification.auth'
    ],
    'COERCE_DECIMAL_TO_STRING': False
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
